{"version":3,"sources":["styles/images/logo1.png","App.js","components/HomePageComponent.js","components/ListUrlComponent.js","components/loadingSpinner.js","components/AddGitURL.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","console","log","fetch","method","headers","Accept","Content-Type","body","then","res","json","react_default","a","createElement","className","id","href","src","logo","alt","Component","HomePageComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","handleToggle","setState","handleClose","event","anchorEl","contains","target","listdata","data","_this2","Rx","fromPromise","subscribe","err","window","location","assign","complete","_this3","AppBar_default","position","Toolbar_default","Link","to","IconButton_default","color","aria-label","Home_default","Typography_default","variant","Button_default","buttonRef","node","aria-owns","undefined","aria-haspopup","onClick","Avatar_default","avatar_url","class","Popper_default","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","name","username","email","MenuItem_default","web_url","React","ListUrlComponent","handleExpandClick","cardNumber","expanded","objectSpread","defineProperty","bind","assertThisInitialized","x","concat","blob","url","resp","_this$state","classes","components_HomePageComponent","map","i","Card_default","app_name","CardHeader_default","avatar","appId","Clear_default","CheckCircle_default","title","subheader","moment","timestamp","fromNow","test","Collapse_default","in","timeout","unmountOnExit","CardContent_default","withStyles","theme","expand","transform","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","expandOpen","loadingSpinner","CircularProgress_default","thickness","AddGitURL","handleOpen","password","handleChange","e","value","context","handleClickButton","socket","io","document","getElementById","pipe","filter","collector","JSON","stringify","on","display","innerHTML","loading","components_loadingSpinner","elevation","TextField_default","label","type","autoComplete","margin","onPress","FormControlLabel_default","control","Checkbox_default","onChange","maxHeight","overflow","padding","background","fontSize","List_default","AppRouter","HashRouter","Route","path","component","exact","Switch","Boolean","hostname","match","ReactDOM","render","routers_AppRouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcf87ad3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.6d89e4f7.png\";","import React, { Component } from 'react';\nimport logo from './styles/images/logo1.png';\nimport './styles/App.css';\n\n\nclass App extends Component {\n\n  test() {\n    console.log(\"clicked\");\n    const url = \"https://github.com/ishawakankar/test2.git\";\n    fetch(`/deploy`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: url\n    })\n      .then(res => { return res.json() })\n      .then(res => console.log(res))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          {/* <Button variant=\"outlined\" className={App-link} href={`/auth`}>\n          Connect using Gitlab\n      </Button> */}\n          <a className=\"App-link\" id=\"loginButton\" href={`/auth`}> \n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n           </a>\n          {/* <button onClick={this.test}> test </button> */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\nimport \"isomorphic-fetch\"\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport * as Rx from 'rxjs-compat';\nimport Avatar from '@material-ui/core/Avatar';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Home from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport {Redirect} from 'react-router-dom'\nimport '../styles/homepage.css';\n\n\n\nclass HomePageComponent extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listdata: [],\n      data: []\n    };\n  }\n\n  componentWillMount() {\n    Rx.Observable.fromPromise(fetch('/profile').then((data) => data.json()))\n      .subscribe((data) => {\n        this.setState({\n          data: data\n        })\n      },\n      (err) => { console.log('err hello')\n      window.location.assign('http://localhost:5000/#/')},\n      (complete) => { }\n      )\n  }\n\n  state = {\n    open: false,\n  };\n\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n  \n  render() {\n\n    const { open } = this.state;    \n  return (\n    \n    <div className=\"root\">\n    \n      <AppBar position=\"static\" className=\"app\" >\n        <Toolbar className=\"iconss\">\n          <Link to={`/home`} className=\"lnk\">\n            <IconButton className=\"menuButton\" color=\"inherit\" aria-label=\"Menu\">\n              <Home />\n            </IconButton>\n          </Link>\n          <Link to={`/listUrl`} className=\"lnk\">\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n             App \n          </Typography>\n          </Link>\n          <Link to={`/newApp`} className=\"lnk\">\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n             NewApp \n          </Typography>\n          </Link>\n          \n          {/* <span className=\"heading\">\n          Rx-Actor Model</span> */}\n        \n\n        <div className=\"root\">\n          <Button\n            buttonRef={node => {\n              this.anchorEl = node;\n            }}\n            aria-owns={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleToggle}\n            className=\"button2\"\n          >\n            <Avatar\n                alt=\"Thumb\"\n                // src=\"https://upload.wikimedia.org/wikipedia/commons/f/f4/User_Avatar_2.png\"\n                src={this.state.data.avatar_url}\n                \n                />\n                &nbsp;&nbsp;\n                <i class=\"fa fa-chevron-down\"></i>\n          </Button>\n          <Popper open={open} anchorEl={this.anchorEl} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n              <Grow\n                {...TransitionProps}\n                id=\"menu-list-grow\"\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n              >\n                <Paper>\n                  <ClickAwayListener  onClickAway={this.handleClose}>\n                    <MenuList>\n                      <h3><strong>{this.state.data.name}</strong></h3>\n                      <div className=\"username\">@{this.state.data.username}\n                        <br /> {this.state.data.email}\n                      </div>\n                      <hr/>\n                      <MenuItem><a href={this.state.data.web_url} target=\"_blank\"\n                      className=\"buttonmenu\">\n                      Go to gitlab</a></MenuItem>\n                      <MenuItem> <a href={`/logout`} className=\"buttonmenu\" target=\"_self\">Logout</a></MenuItem>\n                    </MenuList>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            )}\n          </Popper>\n        </div>\n      \n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n}\n\nexport default (HomePageComponent);\n","/*eslint react/jsx-filename-extension: 0 */\n/*eslint react/prop-types: 0 */\n/* eslint array-callback-return:0 */\n\nimport \"isomorphic-fetch\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport classnames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\n// import Paper from '@material-ui/core/Paper';\n// import List from '@material-ui/core/List';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport Clear from '@material-ui/icons/Clear';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport moment from 'moment';\n\nimport HomePageComponent from './HomePageComponent';\nimport '../styles/ListUrlComponent.css';\nimport * as Rx from 'rxjs-compat'\n\n// const data = require('../logs/client-server-db-docker.log');\n\nconst styles = theme => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    marginLeft: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: -8,\n    },\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n});\n\nclass ListUrlComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listdata: [],\n      data: [],\n      expanded: {}\n    };\n    this.handleExpandClick = this.handleExpandClick.bind(this);\n  }\n\n  handleExpandClick = (cardNumber) => {\n    this.setState({\n      expanded: {\n        ...this.state.expanded,\n        [cardNumber]: !this.state.expanded[cardNumber]\n      }\n    });\n  };\n\n  componentWillMount() {\n    Rx.Observable.fromPromise(fetch('/apps').then((data) => data.json()))\n      .subscribe((data) => {\n        console.log(\"data fetched\", data);\n        this.setState({\n          data: data\n        })\n      });\n  }\n\n  test(x) {\n    console.log('inside test function', x);\n    fetch(`/downloadLog/${x}`)\n      .then((data)=>{\n        data.blob();\n        console.log(\"data: \",data)\n        window.open(data.url)\n      })\n      .then(resp => {\n        console.log(\"this is resp: \",resp);\n        return resp;\n      }) ;\n  }\n\n  render() {\n    const {data, expanded} = this.state;\n    const { classes } = this.props;\n    // this.state.data.map((x, i) => {\n    //   x.timestamp = moment(x.timestamp).fromNow();\n    // }\n    // )\n    console.log(data)\n    return (\n      <div>\n        <HomePageComponent />\n        {data.map((x, i) =>\n          <div className=\"root\">\n            <Card className=\"card\">\n          {console.log('name is: ',x.app_name)}\n\n\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"Deployed\" className=\"avatar\" style={{ color: \"yellowgreen\" }} >\n                    {console.log(\"id check: \", typeof (x.appId), \" \", x.appId)}\n                    {x.appId === \"-1\" ?\n                      <Clear style={{ color: \"red\" }} /> :\n                      <CheckCircle style={{ color: \"green\" }} />\n                    }\n                  </Avatar>\n                }\n                title={x.app_name}\n                subheader={moment(x.timestamp).fromNow()}\n\n              />\n\n\n              {/* <IconButton\n                className={classnames(classes.expand, {\n                  [classes.expandOpen]: expanded[i],\n                })}\n                //className={this.state.expanded[i] ? classes.expandOpen : \"toggleContent-closed\"}\n                onClick={() => this.handleExpandClick(i)}\n                aria-label=\"Show more\"\n              >\n                <ExpandMoreIcon />\n              </IconButton> */}\n\n\n\n              <Button className=\"download\" onClick={() => this.test(x.app_name)}> Download logs  </Button>\n\n              <Collapse in={expanded[i]} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                </CardContent>\n              </Collapse>\n\n\n            </Card>\n          </div>\n        )\n        }\n      </div>\n    );\n  }\n}\n//export default (ListUrlComponent);\nexport default withStyles(styles)(ListUrlComponent);","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction loadingSpinner(props) {\n  return (\n    <div>\n      <CircularProgress className= \"progress\" thickness={7} />\n    </div>\n  );\n}\n\nexport default (loadingSpinner);","/*eslint react/jsx-filename-extension: 0 */\n/* eslint react/forbid-prop-types: 0 */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List'\nimport HomePageComponent from './HomePageComponent';\nimport ProgressBar from './loadingSpinner';\nimport '../styles/AddGitUrl.css';\nimport * as Rx from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport io from 'socket.io-client';\n// const env = require('../../../env_config');\nimport Slide from '@material-ui/core/Slide';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass AddGitURL extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      context: '',\n      open: false,\n      username: '',\n      password: ''\n    }\n    this.handleClickButton = this.handleClickButton.bind(this);\n  }\n\n  handleOpen = () => {\n    this.setState({ open: !this.state.open })\n    console.log('username:',this.state.username)\n    console.log('pass:',this.state.password)\n  }\n\n  componentDidMount() {\n    const socket = io();\n    console.log('before rxjs');\n    Rx.fromEvent(document.getElementById(\"outlined-email-input\"), \"click\")\n    .pipe(map(() => {\n        return {\n          url : document.getElementById(\"outlined-email-input2\").value,\n          username: this.state.username,\n          password: this.state.password  \n        }; \n        \n      }),\n        filter((data) => {\n          return data.url !== \"\"\n        }))\n      .subscribe((collector) => {\n        console.log('THIS IS THE URL: *********** ',collector);\n        fetch(`/deploy`, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            \"collector\": collector\n          })\n        })\n          .then(res => res.json())\n          // .then(res => {\n          //   if (res) {\n          //     console.log('response is: ', res);\n          //     this.setState({ context: '' })\n          //   }\n          //   return res;\n          // })\n          // .then(res => console.log('this is res: ', res))\n      })\n\n    socket.on('chat', (data) => {\n      document.getElementById(\"logger\").style.display = 'block';\n      document.getElementById(\"logger\").innerHTML += `${data} <br/>`;\n    })\n\n  }\n\n  handleClickButton() {\n    console.log('inside handleClickButton', this.state.loading);\n    if (document.getElementById(\"outlined-email-input2\").value) {\n      this.setState({\n        context: <ProgressBar />,\n        open: false\n      })\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    const { context } = this.state;\n    return (\n      <div className=\"main\">\n        <HomePageComponent />\n        <Paper className=\"root1\" elevation={20}>\n          <div className=\"text1\">\n            <TextField\n              id=\"outlined-email-input2\"\n              label=\"GitURL\"\n              className=\"textField1\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"button1\"\n              id=\"outlined-email-input\"\n              name=\"buttonSubmit\"\n              onClick={this.handleClickButton}\n              onPress={this.props.onClick}\n            >\n              Deploy\n            </Button>\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  // checked={this.handleOpen}\n                  onChange={this.handleOpen}\n                  value=\"checkedB\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Use webhook\"\n            />\n           {console.log('asfsd',this.state.open)}   \n            {\n              this.state.open ?\n                <div>\n                  \n                  <TextField id=\"username\"\n                    onChange={e => this.handleChange(e)}\n                    value={this.state.username}\n                    className=\"inputData\"\n                    label=\"Username\"\n                    // className=\"textField1\"\n                    type=\"text\"\n                    name=\"username\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                  <TextField id=\"password\"\n                    onChange={e => this.handleChange(e)}\n                    value={this.state.password}\n                    className=\"inputData\"\n                    label=\"Password\"\n                    // className=\"textField1\"\n                    type=\"password\"\n                    name=\"password\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                  <Button onClick={this.handleOpen} color=\"primary\">\n                    Submit\n                  </Button>\n                  \n                </div>\n                : null\n            }\n\n\n\n            {context}\n          </div>\n        </Paper>\n\n        <Paper id=\"logger\" className={\"root2\"} style={{ maxHeight: 150, overflow: 'auto', padding: 20, background: \"black\", color: \"white\", display: 'none', fontSize: '0.8rem' }}>\n          <List>\n\n          </List>\n        </Paper>\n\n      </div>\n    )\n  }\n}\n\nexport default AddGitURL;\n\n\n\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport App from '../App';\nimport ListUrlComponent from '../components/ListUrlComponent';\nimport AddGitURL from '../components/AddGitURL';\n\n\nfunction AppRouter () {\n   return ( <HashRouter>\n    <div>\n        <Route  path='/' component={App} exact={true} />\n        <Switch>\n            <Route  path='/home'  component={AddGitURL}  />\n            <Route  path='/listUrl'  component={ListUrlComponent} />\n            <Route  path='/newApp'  component={AddGitURL} />\n        </Switch>\n    </div>\n    </HashRouter>)\n}\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}